services:
  goflow2:
    #build:
    #  context: .
    #  dockerfile: Dockerfile
    image: netsampler/goflow2
    user: root # because docker-compose mount as root
    ports:
      - '8080:8080'
      # - '6343:6343/udp'
      - '2055:2055/udp'
    command:
      - -mapping=/field-map.yaml
      - -transport=file
      - -transport.file=/var/log/goflow/goflow2.log
      - -format=json
    restart: unless-stopped
    #logging:
    #  driver: gelf
    #  options:
    #    gelf-address: "udp://localhost:12201"
    #    tag: "flows"
    volumes:
      - ./logs:/var/log/goflow
      - ./field-map.yaml:/field-map.yaml
  broker:
    container_name: broker
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://localhost:9092,CONTROLLER://localhost:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
    image: apache/kafka:4.0.0
    ports:
      - 9092:9092